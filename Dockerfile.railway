# Dockerfile para Railway - Frontend React apenas
FROM node:18-alpine AS build

# Define o autor da imagem
LABEL maintainer="fabricio.sergio672@gmail.com"
LABEL description="Frontend React para Register User App - Railway Deploy"

# Instala dependências necessárias
RUN apk add --no-cache python3 make g++

# Cria o diretório de trabalho
WORKDIR /app

# Copia arquivos de dependências
COPY package*.json ./

# Instala dependências
RUN npm ci --silent

# Copia o código fonte
COPY . .

# Define variáveis de ambiente para build
ENV GENERATE_SOURCEMAP=false
ENV CI=false

# Build da aplicação para produção
RUN npm run build

# Estágio 2: Servidor nginx para Railway
FROM nginx:1.25-alpine AS production

# Instala gettext para envsubst (substituição de variáveis)
RUN apk add --no-cache gettext

# Remove configuração padrão do nginx
RUN rm /etc/nginx/conf.d/default.conf

# Copia template de configuração do nginx
COPY nginx.railway.conf /etc/nginx/templates/default.conf.template

# Copia arquivos buildados do estágio anterior
COPY --from=build /app/build /usr/share/nginx/html

# Script de inicialização para Railway
COPY <<'EOF' /docker-entrypoint.d/40-envsubst-on-templates.sh
#!/bin/sh
set -e

# Substitui $PORT na configuração nginx
envsubst '$$PORT' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf

echo "Nginx configuration updated for PORT=$PORT"
EOF

RUN chmod +x /docker-entrypoint.d/40-envsubst-on-templates.sh

# Expõe a porta definida pelo Railway
EXPOSE $PORT

# Comando para iniciar nginx
CMD ["nginx", "-g", "daemon off;"]